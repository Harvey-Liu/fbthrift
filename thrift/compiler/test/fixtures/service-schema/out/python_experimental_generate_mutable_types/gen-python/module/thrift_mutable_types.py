#
# Autogenerated by Thrift
#
# DO NOT EDIT
#  @generated
#

from __future__ import annotations


# EXPERIMENTAL - DO NOT USE !!!
# See `experimental_generate_mutable_types` documentation in thrift compiler

import dataclasses

import folly.iobuf as _fbthrift_iobuf
import thrift.python.mutable_types as _fbthrift_python_mutable_types
import thrift.python.mutable_exceptions as _fbthrift_python_mutable_exceptions
import thrift.python.mutable_typeinfos as _fbthrift_python_mutable_typeinfos
import thrift.python.types as _fbthrift_python_types


class CustomException(metaclass=_fbthrift_python_mutable_exceptions.MutableGeneratedErrorMeta):
    _fbthrift_SPEC = (
        _fbthrift_python_types.FieldInfo(
            1,  # id
            _fbthrift_python_types.FieldQualifier.Unqualified, # qualifier
            "name",  # name
            "name", # python name (from @python.Name annotation)
            _fbthrift_python_types.typeinfo_string,  # typeinfo
            None,  # default value
            None,  # adapter info
            False, # field type is primitive
            8, # IDL type (see BaseTypeEnum)
        ),
        _fbthrift_python_types.FieldInfo(
            2,  # id
            _fbthrift_python_types.FieldQualifier.Unqualified, # qualifier
            "result",  # name
            "result", # python name (from @python.Name annotation)
            lambda: _fbthrift_python_types.EnumTypeInfo(Result),  # typeinfo
            lambda: Result.SO_SO,  # default value
            None,  # adapter info
            False, # field type is primitive
            10, # IDL type (see BaseTypeEnum)
        ),
    )

    @staticmethod
    def __get_thrift_name__() -> str:
        return "module.CustomException"

    @staticmethod
    def __get_thrift_uri__():
        return None

    @staticmethod
    def __get_metadata__():
        raise NotImplementedError(f"__get_metadata__() is not yet implemented for mutable thrift-python structs: {type(self)}")

    def _to_immutable(self):
        import importlib
        immutable_types = importlib.import_module("module.thrift_types")
        return immutable_types.CustomException(**dataclasses.asdict(self))


class Result(_fbthrift_python_types.Enum, int):
    OK = 0
    SO_SO = 1
    GOOD = 2
    @staticmethod
    def __get_thrift_name__() -> str:
        return "module.Result"

    @staticmethod
    def __get_thrift_uri__():
        return None

    @staticmethod
    def __get_metadata__():
        return module.thrift_metadata.gen_metadata_enum_Result()

    def _to_python(self):
        return self

    def _to_py3(self):
        import importlib
        py3_types = importlib.import_module("module.types")
        return py3_types.Result(self.value)

    def _to_py_deprecated(self):
        return self.value


_fbthrift_all_enums = [
    Result,
]


_fbthrift_schema_3bd6b8a55f23bc3b = b"(\265/\375`\370 M\203\000\312\322842\020X\272\306\2340q\321\033)\352nJX\375\377\217\300\002q\304\314\235Gg\332\230\336\260\315%=r\227\\\270\2611\3569\201\362\364n\026\212\3577r\2673\003;\0039\003\345\237\232\234\2618\0064\312\220=\000\017p\214\343\241\023\011O\001\333\237%\3656\265\260:h\365$B\365\330S!\026\355'\317\353B$%\276\216\212c\235%\024\217w\265/\016@\324H\245\233\007Z\210\324c\346m'J\317\253\006\311p\336\250$\260\334*tP\244eK:\365\353\272\025\234J)\"\244i\322\231\031\376b\317\317{0\261U)\264\210j\201)'\245\001\243\253h\357;\200b\034J\201\025{\350d\300\303\313\316\361\351\356\335\343\267\020u4\240\256\337,\202\261S\215\276\026_\343U\371e\002\3622\323\311\326|\334\334\340\263\340\277)F%?<f\232\0210\310|\304\265]2{\320[XF\"j\270\273\203\2109s\233\024K0<''Z\257\236\241]\320\011(7\314\253(L\317\347\n\254e\253\202#[\362`irXH\371\230\367T\026\326\026\230Q!\204m9\225>\264(\257\261\036S\311\233\337\223<F\037\0358\322\234\037u\327\226\237u+\321\362\300\034J\355\034d\224\005\344e-k\357q\270z\016\000\014\014\010\336V\277\331\346\351!\266\370\230-\036\236\227\251\224\341d\341\261\235\236V\357\362\370>\0066\0044\326\206\313\307\336i\226\272\025\235\261X\210\235\244\351\013e\210\214F\000\"\030\264p\330\301}\241:\227\266\237\004!Rh\340V\313>(yY_\201\025M\020\011*E\024)\034\003\351\247.\236\373\307v\255Ah\255\013\251\225\341L\360#\202a\252\205\247\000\225TI\001\351l\252C\251\032\335f\373i\366[j$\275\020\036p\264\025\0226\351\206\n\344\344\372\307Af\212$\201c\323,\021\326\364\355\331\022\371,\224\214\021\032t\331\340\022x\005\244\264\211\254\314\372I'\2431\220\017\330l\010b\002/_/xZ>\321\211\323\251\206\333\017\242\330\237;qf\rL\314\207\375\354\245\253\254\255Z+!\325\302MU\206\223\276gKYm\215\0215\274\360\345\340\250$\375:!>\013\027V\364\331 \rOZ\364I\011\325:\262\036\177\364|rOS\274)\306':/-\301\222M\257\326\260\231\273D\307\342\215\003\240iz\036f\260\346\370]\031Qz\223\250Q-\346\2339\354\243\265M\374\025\323(\335\271\344\365\323\220 6\036\020\212\332\216\017\223\333e\226\333\034!k\243\027I\016\262\231\374}\303\333\3644\035\376~\247\211\206\314\340p\261]\235^\347\224\277`CCg\265\371P:-]6\256\003\007\r\021\251\345s\242\364\331\316V\317\205vu;M\276\317\211\346\273\034\215\276\326^\023\321\347;\235H\276\273\333\3613\270\232\210\276n\313\331\364\246\261\370\200]\201S\325\006j7?J\024g\025<\321$|0\003>*{\312Ok\316\241\001\212b\203\367\346W\021\221\301\212C,/`{T\024BUK\304\333;\350\002\003Fa\324\2019\212d\207\344\325\252\247\r\301C\272\"6\016\230\325BI]4\316\n\312\336\222\277\273\033m\014~\266R>\277\232\003c\035\016\337\246/)\346G\256\316\312$\210ek\305\036}{^\032\254\213FB\300i\274z\301\256\354h\317,\037\365\265K\345\244\211\370\351\0050\3034\315\003\230\360\215t\335m=tI\204\222XQ\265=\302\271V\340\345h\230\005\001!\030G\346\273\014\355\303\003-\322\363B\250\200\020\222\216\320\021-SJ\304Y\314;\307\275\032\352y\367\227v\375\3608$xq*\226\244\341!/\353V(\352\356v\365\346\r\030;o\233\305?\241\2111B\300\007\242\353\200\365\011\235\035JQ\243'di\201\276]\341\342\255\264\003]\255\352\014\262\364\265\304%\336\004\210\365\242\203\372f\252\350\234\030V^\320\303\"\013z\345\207U\275\365\332W\316\\`\364L1\230\234\230\312\035}\320\300f\217V\320\260G\337\303\314\3149\210\243\014\363\332\265\363yC\241\233~xE\252FG\301\nH\236\233\350\306\261\024\237Ax\374m\333\243'\233$\255\215zHh\023\030\027\375/\267\364\036\305\352\374\242\251O~\235m\340\222s{\027V\230\011\356\242\364a\215\023\320\234\016\002\262\324W;\005\261\326U\011\205W\206\306j\214Yn\034\351+\221\356\020b\222\254x\322\207W\003\303\314\245\303\355sx1\264\363\016K\266r\030]\335\257\024\343 \337\023\221\247\322\r\245`\374\244\351739\325E\3419\304?\017_<\251a&^\320\362\243\336\251\311\365@Qjd\354\350\220s\205\375\003$\020k%*\373~\014\304^\360F\277\306.\241\330\360x\340\216\333\257Fya'\032wwz+\304\326\010\016\333g\316\343\271\022\231\014BG\316\036\355\264\006\212\267T`xX\2663\032MbzeB\254W\334f\205uv~\216^\013/\222\223a9\265\261L\"Mq\270\024\276\037\035/\250nX&\0142\216R\005\\\346\206\224\227@S#I\025j\224l\317\310\313\301\230\013\201\006?{\010v\332\3752\253\030\350\336\220\020\375)u{\367\021uP\023).7\232\232\362\237\211[H\002/\300C\346\315\217\234J\020\262\342\031L\002r\340}xR\020$\312\035\214zgk\014c4\300=q-y\327* ?\257R\031\237\263\\l\031\034\254[\220_b\327\367\243\310\0247\216\011\350,x#\010\221\375\177\302Z$bS\370p\312tV\325\317\340\036r\177\356\346\024\224\011\353y\324\245@*\001(%\346\014\277\246\323\341j\227\317y\255\257\010X\246:%\314|\351e.\326\336\021\230\004*\206>\224T5B\302\375\340\250(\344\216\356\223\336\0350\034e:O\360\266\267\014\362\032\225\354\302\314\342\342\3231\177{>\311\013\345v\351\020\016)2\027d\217t\307V\235\022Jc\017K\035\213`\023\242?\000yuqU\260\372\250\220\265tb\352\242\0253\255\305\021\307\316\"\274\203\246`\307\331JD%t\201\226x\340\333\026\224(bD\231,1:\302L\376~wz[\316\265\317\345\273\026\320\327\235\246\277\367\263\266|\217\257E \n:\0216\333\343l\364r]>\356\026\033_\203\0044J\325\007\001\331\362\324\372\210\223z\032\206\037!\266\273.r~\221\2411\350\250\031:\027\203\361\354.,%\244\253\265z \212\33010\313\323\364\271\270L\023g\267\301n\306\3323\001n\330\356v\232\276\217\341\220\000\337\334\214\305.\265sb>\333\325LD\245\243\251&\230\025.\036E\327\350\233.&\345\251w\221\267C\021m\323\371\2014\014)\221\232\273S\300\356\320S\345\020C\326\307\353\035\256,B\206N\020\2350\3657b\004\341\034\217o\005W\020D\365\2641K!\254\3359\304V\302\351\027\251i\033\323\221]\020g4}J\333NW#?\265q\227\266\367\013~\262\241\320e\205n\2248\3730.\014\326 \341@\231\333Qta7\321\234Z\3631\2568P\212`\351\354\020v\261\026\351\365ei\177_\327\001\363X;|`^F#t\036\213\031eL\272\025\246Sh#\023c\332\357\005J\236\037\357\213\221\003\261\252Y\342\024v\n\031a\003*\336\207B\335\3503\222#\203}\206\226\216\316\305{\233_\003\246\024<!n^D\266\004O2\0343w\364\271,\034\361\204\024G\214\010K\321\312ps)\342y^;\031+\334\304\325\3174=\247\302\251\031\261\"/\243@\324\263q\370\370\214\024\3010d\203*\255x\276J0\020\263J\257\265\206u\211\261\260d\350\363\2736\250a\352\nJ\022\271\302F\034\242\017\311\362\341\333\242xd\325\361\365\251\003\306\021\037\324\005\2258\314';=a\271\243\214F\0214(\315$\240\017\356\372\317\302cG\357\0210\260}L\350To\260(\362z }\365K\"\361\225\220\317\036\001\362\312B\201\240?H\313\225\351Dw\"u\303\307\247[\245\013\007 o\010\343\215I\003\226#Q-\251|\373z`\213\307\257\016~\331\310e\314\311aJ\276\261\273\325\007Go\202U\206G4\022^\272wg\"\354\006\016\325\361\2343>\344L\200\303\275jq}\201\246\002\371\343{\"/\036)k\351\017i\225\032b07g\354l_\350\002\003\010Y+t\360H\375\364\245\235\212\201\354\370\231\334\256\003f\362\227\247\234\342\243\243`\316N!\017\r\341\214\305aP,\020\302Q\345X\254\255\037Q\264=\360\033\3745L\276\266\007\260\032\302\256\262\241QYb\005G\337\302\347\001\242(M\035\354,\306\314{\327\275\343\365kR\370\000\352\360\236\2419\236\2260\024\312r/\275\002\027Zh\246\267\221\237N,\370i&\351\031Yz\255\336\231J\030\207s\232\335\321\250\276\314\260\271\006\257\002\376C\310;\266\315i\031cX\345]\003\367\233\031\200M\205\203\322\344C\212\"c_\241\030$\362\271\200\201H+\352fKg8\006\345@t\"\224\371FF=\3438-\235\300\202<\0041]\277\030v\370E\362\267@\331L\235f\253\034\261\305S\312\351x:FA<\256V\251S\021k\273+\314\027\375\336p\323z\377.\354`H\225\371\276|j\251+:T\004S\355.\215A\302\301\337\357\367K\226\357g\351\267\312\\|W\257E8\203\323\347hQ/g\2604\260\367.\377q<\357\340\037\3223\320w\256\006\247\247\307\366\263\230\362\322\327He\346\373-:K\313\323-[\347\004\341\231\004\346\363\227\336~\267U\312KY\3647\032\326N\205t\002\374!k\276\247\265\351\355+\230\362\271\355\373\375\252\320|\245\320h\2520\315\027\235\005\206\316\372V\241\227\314_\272\033m\276cY\235H\361\372\206#\200\007W_\364\325\226\330\213E\342\006\007\025\001\020\207\022)z\322\243W\206\033\277\205\334\276\202\242\376\316\241\220\002\235\255f3\010\200D>\330\205`\351W-\201W\255\376\360\203j5\243\n\334\243\264\001=\221]\237\031*>\n\225\0006\311n&Q\010\212~$*\013\214-\013L`\363\220<\201\345\223\251\037!\177{\312o8\233\316\026_!\213\203^\035\000\361\374u\314\027]\254/%[\365\321\377\326\310\375\030*T\230E\241v%\211 Cz\377\317\2249\276\313\305619d\234\253&\266\326>OC\021-\355\2449Q\213\240\213@\361F\0215'\323\364\262|\373\353\036/Do#qiJka,\033\0270\374=\231\221\361\220\000z@\344\362\302\243.\204\230\305K\277M\373\232\266\273B\342\362\026\1771\350I%\263\237Fl\301|\352\254\024(B\022\032\215.\372'\356L\\\354\037#\256\345\\}\312\334\203\003\2643\204C\337\263\330\005\034\374\214\305\244\244~\231.j^;\230\0228\216\344^:\021\276\247\337\336\027\206\277V9\274\271\314\326\371\006l\213\227\234@\307\354\341\222'\361r\242\363\204T\336\320\036\301\342\216\220\353\033\011\336\305B\325ya\030\010#/\241k\312L\364B\006\343!\263\260\207\342\351\nHFS\3576\\]V\013m*\023\355\230pa\247DK\301\2301\311\376\205j\201\226\305#+#\276\247Rw\324W\213\366\373`1\341!\2364\311z\217ar\023\365O\036\277w\304\342\272\301Fo\234\013\275\225\324\240\247\225\274\267\273\034J\244a\0248K\341OE\214\317\004I\253\317\020{k\267\213\327\210\203\3603\315L\376\202\315\316e7\\\r\247\303\345q\261Y~D\004\351Js\347\204\001\265\034Y\250\034\236\377\240u\307\323%\346u\270\273\236)E\213\n\003\276\033a\230mK\265&\225\351\312\023B_\215L\350'\320\205\002;\026\322\222#q)e\025B]\224\375\317[2:\300\214\3372\305\233\241\246%\037\311\302\327\351pC\005\212\r0\007\346\324N\331\017\014M\320\276\336\362\205~Z\212\262\251`\2665S\251\206g\356\327\310\337\234\233\035\033\262w[N\317\202\232jb\017\255\321\240\320\023\210\340m\"6\267\033\276^\212\371\331\031\213\353\334{Y\261\365\303\031\205u?\364\037\220\010\311\317\341\273\013\263:\2411\341\203\325\312\222w\351 \363\0354\315\337\356\014|\260\203\"\200\356\326\342h\250\372VF0t\223\022\000\251\330\032\341\001\201t\250\26113\"\"\"\"\242 IJ*\351\261\010!H2\306\254\354\006bI\014\305P\022\003\021\201!\304HB\2103dH$\030SP\224\032\326\334d\257\367\357\237q(\205r\317F\234\025\033\220\\\343+\254n\022$\214\0173\326\320\025\225\203\022\004\310d-r\272\024\024\202!$ \247\357O`\020\202\343\240\362~\340Zr\036\210@\371\357<%\0335\201\25015>\317\351\025TE\377\"\330\033\200W\245p\305(\241\0319\374J\371\0272\237\011P3\r4\013\023\372\357\004\306o\307\002\366\336\377\033q\"\"\232\037:\200\245\332\212\307@m\313\234\305o\030\366\037\025)\352\002\360JY\326O7\305a\345\272^\200j\026\237\222_\374\320\002\341\032&\263z\306\013\345\212X\351\345h\240!\355)\327|\350\037l\307\272\205>\210G\030\271\274\004\236S\003z\312\200\367G3\242\"\370\371N\255{YP\266\0161\327\210\344\364\r\361$\203\203L\312\206\253V\006v^\334\353\371Z\211\3401+\312\2512\007\325\002\242\014\002^\254\213R\327\241\266\001\014\013\032*\352]\214\000S\214\260\237j\361)\212\337\007\201\362\2500M\352\211\264\235\003\304O\215\221\r\210\\b\261L\205\331\236\244\027H\230\344\230\341\n\230\370 \\ \322\024\302\007-qPg\177\205$F2\"v\376\206\354\2155S\024\256A\366.\377\"\204J\011\234\010\304\236\254'\271\322\374Kl\242\254\036\262 \210\n \325\r\2066\232W\370\2160\230\204&N\234ECec\246\244\032\017J\246\350xC\011\302\003\334\216\n\254\034\320\300\377\213m\356\351=\267\260w5\1777C~\242+\010$\226\326\305\255\325P\313\204\373\017<\n9\277uDN\301\260\320\377\245\014d#+\335\212\323enN\303k\014\335\350\352Q3\202Y\026P\\\323k\246\236\026\212\372t\366|\005\213\352\246$\310\001\0113\273BS<\246e\267\230\360\266\207XB-\330L$\356\n\343\240 \351\227\016\365\263\205\036\325\017:\306\026\264\262\342\354\310\253s\250o\006\033\262\302\2117u\323\230\200\240\332p6\336Y\"\322\013^]\300\024\313G\000\302V\211\032u\334D\207\357\0038A)\350\344[\017\240\206\370\211$\255G\266#\365HZ+\200:E\331U\301py\205\365\003\363\340/\005\374\221\216\327\004.\232\355U\342WK2j\206X(\300>\007\235\247\032\013\374\374\010\030pl93\363\214\014\242g\364\324\240 \225\266\030\274\321A\332L\237\267=\020\315\340\313\365\325\371H\331m\004\316Q\303@\302\347\033(\262\226\033\370\232\206\205\230\270\017\351\357 Of-\372\225'\221\200}'\177\366\360v\270\222\273dZ_i\312\315'\020\371\204\340$A#\024\370\2123\217M\227\253\220\271\231^\355\3523NiX\214f\302Z\n]\231\006\364lL0Rk\250\246\032\254\316iG\004\313\315\326\331R\330L\370k\311,\342l#`Am\237\r\232M#1\271\221^\000\017\323\212\034\013\265\225\211\212T\307\243,\024=\335\021\263s\312\221\345\023%\000\242\204\250\315RS$K\345\017"


_fbthrift_all_structs = [
    CustomException,
]
_fbthrift_python_mutable_types.fill_specs(*_fbthrift_all_structs)
