
#
# Autogenerated by Thrift
#
# DO NOT EDIT
#  @generated
#

from thrift.python.capi.cpp_converter cimport cpp_to_python, python_to_cpp
from libcpp.utility cimport move as cmove

cdef extern from "thrift/compiler/test/fixtures/patch/gen-python-capi/module/thrift_types_capi.h":
    pass

cdef cMyData MyData_convert_to_cpp(object inst) except *:
    return cmove(python_to_cpp[cMyData](inst))

cdef object MyData_from_cpp(const cMyData& c_struct):
    return cpp_to_python[cMyData](c_struct)

cdef cMyDataWithCustomDefault MyDataWithCustomDefault_convert_to_cpp(object inst) except *:
    return cmove(python_to_cpp[cMyDataWithCustomDefault](inst))

cdef object MyDataWithCustomDefault_from_cpp(const cMyDataWithCustomDefault& c_struct):
    return cpp_to_python[cMyDataWithCustomDefault](c_struct)

cdef cInnerUnion InnerUnion_convert_to_cpp(object inst) except *:
    return cmove(python_to_cpp[cInnerUnion](inst))

cdef object InnerUnion_from_cpp(const cInnerUnion& c_struct):
    return cpp_to_python[cInnerUnion](c_struct)

cdef cMyUnion MyUnion_convert_to_cpp(object inst) except *:
    return cmove(python_to_cpp[cMyUnion](inst))

cdef object MyUnion_from_cpp(const cMyUnion& c_struct):
    return cpp_to_python[cMyUnion](c_struct)

cdef cMyStruct MyStruct_convert_to_cpp(object inst) except *:
    return cmove(python_to_cpp[cMyStruct](inst))

cdef object MyStruct_from_cpp(const cMyStruct& c_struct):
    return cpp_to_python[cMyStruct](c_struct)

cdef cLateDefStruct LateDefStruct_convert_to_cpp(object inst) except *:
    return cmove(python_to_cpp[cLateDefStruct](inst))

cdef object LateDefStruct_from_cpp(const cLateDefStruct& c_struct):
    return cpp_to_python[cLateDefStruct](c_struct)

cdef cRecursive Recursive_convert_to_cpp(object inst) except *:
    return cmove(python_to_cpp[cRecursive](inst))

cdef object Recursive_from_cpp(const cRecursive& c_struct):
    return cpp_to_python[cRecursive](c_struct)

cdef cBar Bar_convert_to_cpp(object inst) except *:
    return cmove(python_to_cpp[cBar](inst))

cdef object Bar_from_cpp(const cBar& c_struct):
    return cpp_to_python[cBar](c_struct)

cdef cLoop Loop_convert_to_cpp(object inst) except *:
    return cmove(python_to_cpp[cLoop](inst))

cdef object Loop_from_cpp(const cLoop& c_struct):
    return cpp_to_python[cLoop](c_struct)

cdef cRefFields RefFields_convert_to_cpp(object inst) except *:
    return cmove(python_to_cpp[cRefFields](inst))

cdef object RefFields_from_cpp(const cRefFields& c_struct):
    return cpp_to_python[cRefFields](c_struct)

