#
# Autogenerated by Thrift
#
# DO NOT EDIT
#  @generated
#

from __future__ import annotations

import folly.iobuf as _fbthrift_iobuf
import thrift.python.types as _fbthrift_python_types
import thrift.python.exceptions as _fbthrift_python_exceptions


import apache.thrift.op.patch.thrift_types

import apache.thrift.type.standard.thrift_types


class MyData(metaclass=_fbthrift_python_types.StructMeta):
    _fbthrift_SPEC = (
        _fbthrift_python_types.FieldInfo(
            1,  # id
            _fbthrift_python_types.FieldQualifier.Terse, # qualifier
            "data1",  # name
            "data1",  # python name (from @python.Name annotation)
            _fbthrift_python_types.typeinfo_string,  # typeinfo
            None,  # default value
            None,  # adapter info
            False, # field type is primitive
        ),
        _fbthrift_python_types.FieldInfo(
            2,  # id
            _fbthrift_python_types.FieldQualifier.Terse, # qualifier
            "data2",  # name
            "data2",  # python name (from @python.Name annotation)
            _fbthrift_python_types.typeinfo_i32,  # typeinfo
            None,  # default value
            None,  # adapter info
            True, # field type is primitive
        ),
    )

    @staticmethod
    def __get_thrift_name__() -> str:
        return "module.MyData"

    @staticmethod
    def __get_thrift_uri__():
        return "test.dev/fixtures/patch/MyData"

    @staticmethod
    def __get_metadata__():
        return _fbthrift_metadata__struct_MyData()

    def _to_python(self):
        return self

    def _to_py3(self):
        import importlib
        py3_types = importlib.import_module("test.fixtures.patch.module.types")
        import thrift.py3.converter
        return thrift.py3.converter.to_py3_struct(py3_types.MyData, self)

    def _to_py_deprecated(self):
        import importlib
        import thrift.util.converter
        try:
            py_deprecated_types = importlib.import_module("module.ttypes")
            return thrift.util.converter.to_py_struct(py_deprecated_types.MyData, self)
        except ModuleNotFoundError:
            py_asyncio_types = importlib.import_module("module.ttypes")
            return thrift.util.converter.to_py_struct(py_asyncio_types.MyData, self)


class MyDataWithCustomDefault(metaclass=_fbthrift_python_types.StructMeta):
    _fbthrift_SPEC = (
        _fbthrift_python_types.FieldInfo(
            1,  # id
            _fbthrift_python_types.FieldQualifier.Terse, # qualifier
            "data1",  # name
            "data1",  # python name (from @python.Name annotation)
            _fbthrift_python_types.typeinfo_string,  # typeinfo
            "1",  # default value
            None,  # adapter info
            False, # field type is primitive
        ),
        _fbthrift_python_types.FieldInfo(
            2,  # id
            _fbthrift_python_types.FieldQualifier.Terse, # qualifier
            "data2",  # name
            "data2",  # python name (from @python.Name annotation)
            _fbthrift_python_types.typeinfo_i32,  # typeinfo
            2,  # default value
            None,  # adapter info
            True, # field type is primitive
        ),
    )

    @staticmethod
    def __get_thrift_name__() -> str:
        return "module.MyDataWithCustomDefault"

    @staticmethod
    def __get_thrift_uri__():
        return "test.dev/fixtures/patch/MyDataWithCustomDefault"

    @staticmethod
    def __get_metadata__():
        return _fbthrift_metadata__struct_MyDataWithCustomDefault()

    def _to_python(self):
        return self

    def _to_py3(self):
        import importlib
        py3_types = importlib.import_module("test.fixtures.patch.module.types")
        import thrift.py3.converter
        return thrift.py3.converter.to_py3_struct(py3_types.MyDataWithCustomDefault, self)

    def _to_py_deprecated(self):
        import importlib
        import thrift.util.converter
        try:
            py_deprecated_types = importlib.import_module("module.ttypes")
            return thrift.util.converter.to_py_struct(py_deprecated_types.MyDataWithCustomDefault, self)
        except ModuleNotFoundError:
            py_asyncio_types = importlib.import_module("module.ttypes")
            return thrift.util.converter.to_py_struct(py_asyncio_types.MyDataWithCustomDefault, self)


class InnerUnion(metaclass=_fbthrift_python_types.UnionMeta):
    _fbthrift_SPEC = (
        _fbthrift_python_types.FieldInfo(
            1,  # id
            _fbthrift_python_types.FieldQualifier.Unqualified, # qualifier
            "innerOption",  # name
            "innerOption",  # python name (from @python.Name annotation)
            _fbthrift_python_types.typeinfo_binary,  # typeinfo
            None,  # default value
            None,  # adapter info
            True, # field type is primitive
        ),
    )

    @staticmethod
    def __get_thrift_name__() -> str:
        return "module.InnerUnion"

    @staticmethod
    def __get_thrift_uri__():
        return "test.dev/fixtures/patch/InnerUnion"

    @staticmethod
    def __get_metadata__():
        return _fbthrift_metadata__struct_InnerUnion()

    def _to_python(self):
        return self

    def _to_py3(self):
        import importlib
        py3_types = importlib.import_module("test.fixtures.patch.module.types")
        import thrift.py3.converter
        return thrift.py3.converter.to_py3_struct(py3_types.InnerUnion, self)

    def _to_py_deprecated(self):
        import importlib
        import thrift.util.converter
        try:
            py_deprecated_types = importlib.import_module("module.ttypes")
            return thrift.util.converter.to_py_struct(py_deprecated_types.InnerUnion, self)
        except ModuleNotFoundError:
            py_asyncio_types = importlib.import_module("module.ttypes")
            return thrift.util.converter.to_py_struct(py_asyncio_types.InnerUnion, self)


class MyUnion(metaclass=_fbthrift_python_types.UnionMeta):
    _fbthrift_SPEC = (
        _fbthrift_python_types.FieldInfo(
            1,  # id
            _fbthrift_python_types.FieldQualifier.Unqualified, # qualifier
            "option1",  # name
            "option1",  # python name (from @python.Name annotation)
            _fbthrift_python_types.typeinfo_string,  # typeinfo
            None,  # default value
            None,  # adapter info
            False, # field type is primitive
        ),
        _fbthrift_python_types.FieldInfo(
            2,  # id
            _fbthrift_python_types.FieldQualifier.Unqualified, # qualifier
            "option2",  # name
            "option2",  # python name (from @python.Name annotation)
            _fbthrift_python_types.typeinfo_i32,  # typeinfo
            None,  # default value
            None,  # adapter info
            True, # field type is primitive
        ),
        _fbthrift_python_types.FieldInfo(
            3,  # id
            _fbthrift_python_types.FieldQualifier.Unqualified, # qualifier
            "option3",  # name
            "option3",  # python name (from @python.Name annotation)
            lambda: _fbthrift_python_types.StructTypeInfo(InnerUnion),  # typeinfo
            None,  # default value
            None,  # adapter info
            False, # field type is primitive
        ),
    )

    @staticmethod
    def __get_thrift_name__() -> str:
        return "module.MyUnion"

    @staticmethod
    def __get_thrift_uri__():
        return "test.dev/fixtures/patch/MyUnion"

    @staticmethod
    def __get_metadata__():
        return _fbthrift_metadata__struct_MyUnion()

    def _to_python(self):
        return self

    def _to_py3(self):
        import importlib
        py3_types = importlib.import_module("test.fixtures.patch.module.types")
        import thrift.py3.converter
        return thrift.py3.converter.to_py3_struct(py3_types.MyUnion, self)

    def _to_py_deprecated(self):
        import importlib
        import thrift.util.converter
        try:
            py_deprecated_types = importlib.import_module("module.ttypes")
            return thrift.util.converter.to_py_struct(py_deprecated_types.MyUnion, self)
        except ModuleNotFoundError:
            py_asyncio_types = importlib.import_module("module.ttypes")
            return thrift.util.converter.to_py_struct(py_asyncio_types.MyUnion, self)


class MyStruct(metaclass=_fbthrift_python_types.StructMeta):
    _fbthrift_SPEC = (
        _fbthrift_python_types.FieldInfo(
            -32,  # id
            _fbthrift_python_types.FieldQualifier.Terse, # qualifier
            "structWithCustomDefault",  # name
            "structWithCustomDefault",  # python name (from @python.Name annotation)
            lambda: _fbthrift_python_types.StructTypeInfo(MyDataWithCustomDefault),  # typeinfo
            None,  # default value
            None,  # adapter info
            False, # field type is primitive
        ),
        _fbthrift_python_types.FieldInfo(
            -31,  # id
            _fbthrift_python_types.FieldQualifier.Terse, # qualifier
            "i32WithCustomDefault",  # name
            "i32WithCustomDefault",  # python name (from @python.Name annotation)
            _fbthrift_python_types.typeinfo_i32,  # typeinfo
            1,  # default value
            None,  # adapter info
            True, # field type is primitive
        ),
        _fbthrift_python_types.FieldInfo(
            -30,  # id
            _fbthrift_python_types.FieldQualifier.Terse, # qualifier
            "mapMap",  # name
            "mapMap",  # python name (from @python.Name annotation)
            lambda: _fbthrift_python_types.MapTypeInfo(_fbthrift_python_types.typeinfo_string, _fbthrift_python_types.MapTypeInfo(_fbthrift_python_types.typeinfo_string, _fbthrift_python_types.typeinfo_i32)),  # typeinfo
            None,  # default value
            None,  # adapter info
            False, # field type is primitive
        ),
        _fbthrift_python_types.FieldInfo(
            -29,  # id
            _fbthrift_python_types.FieldQualifier.Terse, # qualifier
            "listMap",  # name
            "listMap",  # python name (from @python.Name annotation)
            lambda: _fbthrift_python_types.ListTypeInfo(_fbthrift_python_types.MapTypeInfo(_fbthrift_python_types.typeinfo_string, _fbthrift_python_types.typeinfo_i32)),  # typeinfo
            None,  # default value
            None,  # adapter info
            False, # field type is primitive
        ),
        _fbthrift_python_types.FieldInfo(
            -28,  # id
            _fbthrift_python_types.FieldQualifier.Optional, # qualifier
            "optMapVal",  # name
            "optMapVal",  # python name (from @python.Name annotation)
            lambda: _fbthrift_python_types.MapTypeInfo(_fbthrift_python_types.typeinfo_string, _fbthrift_python_types.typeinfo_string),  # typeinfo
            None,  # default value
            None,  # adapter info
            False, # field type is primitive
        ),
        _fbthrift_python_types.FieldInfo(
            -27,  # id
            _fbthrift_python_types.FieldQualifier.Optional, # qualifier
            "optSetVal",  # name
            "optSetVal",  # python name (from @python.Name annotation)
            lambda: _fbthrift_python_types.SetTypeInfo(_fbthrift_python_types.typeinfo_string),  # typeinfo
            None,  # default value
            None,  # adapter info
            False, # field type is primitive
        ),
        _fbthrift_python_types.FieldInfo(
            -26,  # id
            _fbthrift_python_types.FieldQualifier.Optional, # qualifier
            "optListVal",  # name
            "optListVal",  # python name (from @python.Name annotation)
            lambda: _fbthrift_python_types.ListTypeInfo(_fbthrift_python_types.typeinfo_i16),  # typeinfo
            None,  # default value
            None,  # adapter info
            False, # field type is primitive
        ),
        _fbthrift_python_types.FieldInfo(
            -25,  # id
            _fbthrift_python_types.FieldQualifier.Optional, # qualifier
            "optLateStructVal",  # name
            "optLateStructVal",  # python name (from @python.Name annotation)
            lambda: _fbthrift_python_types.StructTypeInfo(LateDefStruct),  # typeinfo
            None,  # default value
            None,  # adapter info
            False, # field type is primitive
        ),
        _fbthrift_python_types.FieldInfo(
            -24,  # id
            _fbthrift_python_types.FieldQualifier.Optional, # qualifier
            "optStructVal",  # name
            "optStructVal",  # python name (from @python.Name annotation)
            lambda: _fbthrift_python_types.StructTypeInfo(MyData),  # typeinfo
            None,  # default value
            None,  # adapter info
            False, # field type is primitive
        ),
        _fbthrift_python_types.FieldInfo(
            -23,  # id
            _fbthrift_python_types.FieldQualifier.Optional, # qualifier
            "optEnumVal",  # name
            "optEnumVal",  # python name (from @python.Name annotation)
            lambda: _fbthrift_python_types.EnumTypeInfo(MyEnum),  # typeinfo
            None,  # default value
            None,  # adapter info
            False, # field type is primitive
        ),
        _fbthrift_python_types.FieldInfo(
            -22,  # id
            _fbthrift_python_types.FieldQualifier.Optional, # qualifier
            "optBinaryVal",  # name
            "optBinaryVal",  # python name (from @python.Name annotation)
            _fbthrift_python_types.typeinfo_iobuf,  # typeinfo
            None,  # default value
            None,  # adapter info
            True, # field type is primitive
        ),
        _fbthrift_python_types.FieldInfo(
            -21,  # id
            _fbthrift_python_types.FieldQualifier.Optional, # qualifier
            "optStringVal",  # name
            "optStringVal",  # python name (from @python.Name annotation)
            _fbthrift_python_types.typeinfo_string,  # typeinfo
            None,  # default value
            None,  # adapter info
            False, # field type is primitive
        ),
        _fbthrift_python_types.FieldInfo(
            -20,  # id
            _fbthrift_python_types.FieldQualifier.Optional, # qualifier
            "optDoubleVal",  # name
            "optDoubleVal",  # python name (from @python.Name annotation)
            _fbthrift_python_types.typeinfo_double,  # typeinfo
            None,  # default value
            None,  # adapter info
            True, # field type is primitive
        ),
        _fbthrift_python_types.FieldInfo(
            -19,  # id
            _fbthrift_python_types.FieldQualifier.Optional, # qualifier
            "optFloatVal",  # name
            "optFloatVal",  # python name (from @python.Name annotation)
            _fbthrift_python_types.typeinfo_float,  # typeinfo
            None,  # default value
            None,  # adapter info
            True, # field type is primitive
        ),
        _fbthrift_python_types.FieldInfo(
            -18,  # id
            _fbthrift_python_types.FieldQualifier.Optional, # qualifier
            "optI64Val",  # name
            "optI64Val",  # python name (from @python.Name annotation)
            _fbthrift_python_types.typeinfo_i64,  # typeinfo
            None,  # default value
            None,  # adapter info
            True, # field type is primitive
        ),
        _fbthrift_python_types.FieldInfo(
            -17,  # id
            _fbthrift_python_types.FieldQualifier.Optional, # qualifier
            "optI32Val",  # name
            "optI32Val",  # python name (from @python.Name annotation)
            _fbthrift_python_types.typeinfo_i32,  # typeinfo
            None,  # default value
            None,  # adapter info
            True, # field type is primitive
        ),
        _fbthrift_python_types.FieldInfo(
            -16,  # id
            _fbthrift_python_types.FieldQualifier.Optional, # qualifier
            "optI16Val",  # name
            "optI16Val",  # python name (from @python.Name annotation)
            _fbthrift_python_types.typeinfo_i16,  # typeinfo
            None,  # default value
            None,  # adapter info
            True, # field type is primitive
        ),
        _fbthrift_python_types.FieldInfo(
            -15,  # id
            _fbthrift_python_types.FieldQualifier.Optional, # qualifier
            "optByteVal",  # name
            "optByteVal",  # python name (from @python.Name annotation)
            _fbthrift_python_types.typeinfo_byte,  # typeinfo
            None,  # default value
            None,  # adapter info
            True, # field type is primitive
        ),
        _fbthrift_python_types.FieldInfo(
            -14,  # id
            _fbthrift_python_types.FieldQualifier.Optional, # qualifier
            "optBoolVal",  # name
            "optBoolVal",  # python name (from @python.Name annotation)
            _fbthrift_python_types.typeinfo_bool,  # typeinfo
            None,  # default value
            None,  # adapter info
            True, # field type is primitive
        ),
        _fbthrift_python_types.FieldInfo(
            -13,  # id
            _fbthrift_python_types.FieldQualifier.Terse, # qualifier
            "lateStructVal",  # name
            "lateStructVal",  # python name (from @python.Name annotation)
            lambda: _fbthrift_python_types.StructTypeInfo(LateDefStruct),  # typeinfo
            None,  # default value
            None,  # adapter info
            False, # field type is primitive
        ),
        _fbthrift_python_types.FieldInfo(
            -12,  # id
            _fbthrift_python_types.FieldQualifier.Terse, # qualifier
            "unionVal",  # name
            "unionVal",  # python name (from @python.Name annotation)
            lambda: _fbthrift_python_types.StructTypeInfo(MyUnion),  # typeinfo
            None,  # default value
            None,  # adapter info
            False, # field type is primitive
        ),
        _fbthrift_python_types.FieldInfo(
            -11,  # id
            _fbthrift_python_types.FieldQualifier.Terse, # qualifier
            "structVal",  # name
            "structVal",  # python name (from @python.Name annotation)
            lambda: _fbthrift_python_types.StructTypeInfo(MyData),  # typeinfo
            None,  # default value
            None,  # adapter info
            False, # field type is primitive
        ),
        _fbthrift_python_types.FieldInfo(
            -10,  # id
            _fbthrift_python_types.FieldQualifier.Terse, # qualifier
            "enumVal",  # name
            "enumVal",  # python name (from @python.Name annotation)
            lambda: _fbthrift_python_types.EnumTypeInfo(MyEnum),  # typeinfo
            None,  # default value
            None,  # adapter info
            False, # field type is primitive
        ),
        _fbthrift_python_types.FieldInfo(
            -9,  # id
            _fbthrift_python_types.FieldQualifier.Terse, # qualifier
            "binaryVal",  # name
            "binaryVal",  # python name (from @python.Name annotation)
            _fbthrift_python_types.typeinfo_iobuf,  # typeinfo
            None,  # default value
            None,  # adapter info
            True, # field type is primitive
        ),
        _fbthrift_python_types.FieldInfo(
            -8,  # id
            _fbthrift_python_types.FieldQualifier.Terse, # qualifier
            "stringVal",  # name
            "stringVal",  # python name (from @python.Name annotation)
            _fbthrift_python_types.typeinfo_string,  # typeinfo
            None,  # default value
            None,  # adapter info
            False, # field type is primitive
        ),
        _fbthrift_python_types.FieldInfo(
            -7,  # id
            _fbthrift_python_types.FieldQualifier.Terse, # qualifier
            "doubleVal",  # name
            "doubleVal",  # python name (from @python.Name annotation)
            _fbthrift_python_types.typeinfo_double,  # typeinfo
            None,  # default value
            None,  # adapter info
            True, # field type is primitive
        ),
        _fbthrift_python_types.FieldInfo(
            -6,  # id
            _fbthrift_python_types.FieldQualifier.Terse, # qualifier
            "floatVal",  # name
            "floatVal",  # python name (from @python.Name annotation)
            _fbthrift_python_types.typeinfo_float,  # typeinfo
            None,  # default value
            None,  # adapter info
            True, # field type is primitive
        ),
        _fbthrift_python_types.FieldInfo(
            -5,  # id
            _fbthrift_python_types.FieldQualifier.Terse, # qualifier
            "i64Val",  # name
            "i64Val",  # python name (from @python.Name annotation)
            _fbthrift_python_types.typeinfo_i64,  # typeinfo
            None,  # default value
            None,  # adapter info
            True, # field type is primitive
        ),
        _fbthrift_python_types.FieldInfo(
            -4,  # id
            _fbthrift_python_types.FieldQualifier.Terse, # qualifier
            "i32Val",  # name
            "i32Val",  # python name (from @python.Name annotation)
            _fbthrift_python_types.typeinfo_i32,  # typeinfo
            None,  # default value
            None,  # adapter info
            True, # field type is primitive
        ),
        _fbthrift_python_types.FieldInfo(
            -3,  # id
            _fbthrift_python_types.FieldQualifier.Terse, # qualifier
            "i16Val",  # name
            "i16Val",  # python name (from @python.Name annotation)
            _fbthrift_python_types.typeinfo_i16,  # typeinfo
            None,  # default value
            None,  # adapter info
            True, # field type is primitive
        ),
        _fbthrift_python_types.FieldInfo(
            -2,  # id
            _fbthrift_python_types.FieldQualifier.Terse, # qualifier
            "byteVal",  # name
            "byteVal",  # python name (from @python.Name annotation)
            _fbthrift_python_types.typeinfo_byte,  # typeinfo
            None,  # default value
            None,  # adapter info
            True, # field type is primitive
        ),
        _fbthrift_python_types.FieldInfo(
            -1,  # id
            _fbthrift_python_types.FieldQualifier.Terse, # qualifier
            "boolVal",  # name
            "boolVal",  # python name (from @python.Name annotation)
            _fbthrift_python_types.typeinfo_bool,  # typeinfo
            None,  # default value
            None,  # adapter info
            True, # field type is primitive
        ),
        _fbthrift_python_types.FieldInfo(
            1,  # id
            _fbthrift_python_types.FieldQualifier.Terse, # qualifier
            "structWithFieldCustomDefault",  # name
            "structWithFieldCustomDefault",  # python name (from @python.Name annotation)
            lambda: _fbthrift_python_types.StructTypeInfo(MyData),  # typeinfo
            lambda: MyData(data1="1", data2=2),  # default value
            None,  # adapter info
            False, # field type is primitive
        ),
    )

    @staticmethod
    def __get_thrift_name__() -> str:
        return "module.MyStruct"

    @staticmethod
    def __get_thrift_uri__():
        return "test.dev/fixtures/patch/MyStruct"

    @staticmethod
    def __get_metadata__():
        return _fbthrift_metadata__struct_MyStruct()

    def _to_python(self):
        return self

    def _to_py3(self):
        import importlib
        py3_types = importlib.import_module("test.fixtures.patch.module.types")
        import thrift.py3.converter
        return thrift.py3.converter.to_py3_struct(py3_types.MyStruct, self)

    def _to_py_deprecated(self):
        import importlib
        import thrift.util.converter
        try:
            py_deprecated_types = importlib.import_module("module.ttypes")
            return thrift.util.converter.to_py_struct(py_deprecated_types.MyStruct, self)
        except ModuleNotFoundError:
            py_asyncio_types = importlib.import_module("module.ttypes")
            return thrift.util.converter.to_py_struct(py_asyncio_types.MyStruct, self)


class LateDefStruct(metaclass=_fbthrift_python_types.StructMeta):
    _fbthrift_SPEC = (
    )

    @staticmethod
    def __get_thrift_name__() -> str:
        return "module.LateDefStruct"

    @staticmethod
    def __get_thrift_uri__():
        return "test.dev/fixtures/patch/LateDefStruct"

    @staticmethod
    def __get_metadata__():
        return _fbthrift_metadata__struct_LateDefStruct()

    def _to_python(self):
        return self

    def _to_py3(self):
        import importlib
        py3_types = importlib.import_module("test.fixtures.patch.module.types")
        import thrift.py3.converter
        return thrift.py3.converter.to_py3_struct(py3_types.LateDefStruct, self)

    def _to_py_deprecated(self):
        import importlib
        import thrift.util.converter
        try:
            py_deprecated_types = importlib.import_module("module.ttypes")
            return thrift.util.converter.to_py_struct(py_deprecated_types.LateDefStruct, self)
        except ModuleNotFoundError:
            py_asyncio_types = importlib.import_module("module.ttypes")
            return thrift.util.converter.to_py_struct(py_asyncio_types.LateDefStruct, self)


class Recursive(metaclass=_fbthrift_python_types.StructMeta):
    _fbthrift_SPEC = (
        _fbthrift_python_types.FieldInfo(
            -1,  # id
            _fbthrift_python_types.FieldQualifier.Terse, # qualifier
            "nodes",  # name
            "nodes",  # python name (from @python.Name annotation)
            lambda: _fbthrift_python_types.MapTypeInfo(_fbthrift_python_types.typeinfo_string, _fbthrift_python_types.StructTypeInfo(Recursive)),  # typeinfo
            None,  # default value
            None,  # adapter info
            False, # field type is primitive
        ),
    )

    @staticmethod
    def __get_thrift_name__() -> str:
        return "module.Recursive"

    @staticmethod
    def __get_thrift_uri__():
        return "test.dev/fixtures/patch/Recursive"

    @staticmethod
    def __get_metadata__():
        return _fbthrift_metadata__struct_Recursive()

    def _to_python(self):
        return self

    def _to_py3(self):
        import importlib
        py3_types = importlib.import_module("test.fixtures.patch.module.types")
        import thrift.py3.converter
        return thrift.py3.converter.to_py3_struct(py3_types.Recursive, self)

    def _to_py_deprecated(self):
        import importlib
        import thrift.util.converter
        try:
            py_deprecated_types = importlib.import_module("module.ttypes")
            return thrift.util.converter.to_py_struct(py_deprecated_types.Recursive, self)
        except ModuleNotFoundError:
            py_asyncio_types = importlib.import_module("module.ttypes")
            return thrift.util.converter.to_py_struct(py_asyncio_types.Recursive, self)


class Bar(metaclass=_fbthrift_python_types.StructMeta):
    _fbthrift_SPEC = (
        _fbthrift_python_types.FieldInfo(
            -1,  # id
            _fbthrift_python_types.FieldQualifier.Terse, # qualifier
            "loop",  # name
            "loop",  # python name (from @python.Name annotation)
            lambda: _fbthrift_python_types.StructTypeInfo(Loop),  # typeinfo
            None,  # default value
            None,  # adapter info
            False, # field type is primitive
        ),
    )

    @staticmethod
    def __get_thrift_name__() -> str:
        return "module.Bar"

    @staticmethod
    def __get_thrift_uri__():
        return "test.dev/fixtures/patch/Bar"

    @staticmethod
    def __get_metadata__():
        return _fbthrift_metadata__struct_Bar()

    def _to_python(self):
        return self

    def _to_py3(self):
        import importlib
        py3_types = importlib.import_module("test.fixtures.patch.module.types")
        import thrift.py3.converter
        return thrift.py3.converter.to_py3_struct(py3_types.Bar, self)

    def _to_py_deprecated(self):
        import importlib
        import thrift.util.converter
        try:
            py_deprecated_types = importlib.import_module("module.ttypes")
            return thrift.util.converter.to_py_struct(py_deprecated_types.Bar, self)
        except ModuleNotFoundError:
            py_asyncio_types = importlib.import_module("module.ttypes")
            return thrift.util.converter.to_py_struct(py_asyncio_types.Bar, self)


class Loop(metaclass=_fbthrift_python_types.StructMeta):
    _fbthrift_SPEC = (
        _fbthrift_python_types.FieldInfo(
            -1,  # id
            _fbthrift_python_types.FieldQualifier.Terse, # qualifier
            "bar",  # name
            "bar",  # python name (from @python.Name annotation)
            lambda: _fbthrift_python_types.StructTypeInfo(Bar),  # typeinfo
            None,  # default value
            None,  # adapter info
            False, # field type is primitive
        ),
    )

    @staticmethod
    def __get_thrift_name__() -> str:
        return "module.Loop"

    @staticmethod
    def __get_thrift_uri__():
        return "test.dev/fixtures/patch/Loop"

    @staticmethod
    def __get_metadata__():
        return _fbthrift_metadata__struct_Loop()

    def _to_python(self):
        return self

    def _to_py3(self):
        import importlib
        py3_types = importlib.import_module("test.fixtures.patch.module.types")
        import thrift.py3.converter
        return thrift.py3.converter.to_py3_struct(py3_types.Loop, self)

    def _to_py_deprecated(self):
        import importlib
        import thrift.util.converter
        try:
            py_deprecated_types = importlib.import_module("module.ttypes")
            return thrift.util.converter.to_py_struct(py_deprecated_types.Loop, self)
        except ModuleNotFoundError:
            py_asyncio_types = importlib.import_module("module.ttypes")
            return thrift.util.converter.to_py_struct(py_asyncio_types.Loop, self)


class RefFields(metaclass=_fbthrift_python_types.StructMeta):
    _fbthrift_SPEC = (
        _fbthrift_python_types.FieldInfo(
            1,  # id
            _fbthrift_python_types.FieldQualifier.Terse, # qualifier
            "unique",  # name
            "unique",  # python name (from @python.Name annotation)
            lambda: _fbthrift_python_types.ListTypeInfo(_fbthrift_python_types.typeinfo_i32),  # typeinfo
            None,  # default value
            None,  # adapter info
            False, # field type is primitive
        ),
        _fbthrift_python_types.FieldInfo(
            2,  # id
            _fbthrift_python_types.FieldQualifier.Terse, # qualifier
            "shared_const",  # name
            "shared_const",  # python name (from @python.Name annotation)
            lambda: _fbthrift_python_types.ListTypeInfo(_fbthrift_python_types.typeinfo_i32),  # typeinfo
            None,  # default value
            None,  # adapter info
            False, # field type is primitive
        ),
        _fbthrift_python_types.FieldInfo(
            3,  # id
            _fbthrift_python_types.FieldQualifier.Terse, # qualifier
            "shared_mustable",  # name
            "shared_mustable",  # python name (from @python.Name annotation)
            lambda: _fbthrift_python_types.ListTypeInfo(_fbthrift_python_types.typeinfo_i32),  # typeinfo
            None,  # default value
            None,  # adapter info
            False, # field type is primitive
        ),
        _fbthrift_python_types.FieldInfo(
            4,  # id
            _fbthrift_python_types.FieldQualifier.Optional, # qualifier
            "opt_unique",  # name
            "opt_unique",  # python name (from @python.Name annotation)
            lambda: _fbthrift_python_types.ListTypeInfo(_fbthrift_python_types.typeinfo_i32),  # typeinfo
            None,  # default value
            None,  # adapter info
            False, # field type is primitive
        ),
        _fbthrift_python_types.FieldInfo(
            5,  # id
            _fbthrift_python_types.FieldQualifier.Optional, # qualifier
            "opt_shared_const",  # name
            "opt_shared_const",  # python name (from @python.Name annotation)
            lambda: _fbthrift_python_types.ListTypeInfo(_fbthrift_python_types.typeinfo_i32),  # typeinfo
            None,  # default value
            None,  # adapter info
            False, # field type is primitive
        ),
        _fbthrift_python_types.FieldInfo(
            6,  # id
            _fbthrift_python_types.FieldQualifier.Optional, # qualifier
            "opt_shared_mustable",  # name
            "opt_shared_mustable",  # python name (from @python.Name annotation)
            lambda: _fbthrift_python_types.ListTypeInfo(_fbthrift_python_types.typeinfo_i32),  # typeinfo
            None,  # default value
            None,  # adapter info
            False, # field type is primitive
        ),
        _fbthrift_python_types.FieldInfo(
            7,  # id
            _fbthrift_python_types.FieldQualifier.Optional, # qualifier
            "opt_box",  # name
            "opt_box",  # python name (from @python.Name annotation)
            lambda: _fbthrift_python_types.ListTypeInfo(_fbthrift_python_types.typeinfo_i32),  # typeinfo
            None,  # default value
            None,  # adapter info
            False, # field type is primitive
        ),
    )

    @staticmethod
    def __get_thrift_name__() -> str:
        return "module.RefFields"

    @staticmethod
    def __get_thrift_uri__():
        return "test.dev/fixtures/patch/RefFields"

    @staticmethod
    def __get_metadata__():
        return _fbthrift_metadata__struct_RefFields()

    def _to_python(self):
        return self

    def _to_py3(self):
        import importlib
        py3_types = importlib.import_module("test.fixtures.patch.module.types")
        import thrift.py3.converter
        return thrift.py3.converter.to_py3_struct(py3_types.RefFields, self)

    def _to_py_deprecated(self):
        import importlib
        import thrift.util.converter
        try:
            py_deprecated_types = importlib.import_module("module.ttypes")
            return thrift.util.converter.to_py_struct(py_deprecated_types.RefFields, self)
        except ModuleNotFoundError:
            py_asyncio_types = importlib.import_module("module.ttypes")
            return thrift.util.converter.to_py_struct(py_asyncio_types.RefFields, self)

# This unfortunately has to be down here to prevent circular imports
import test.fixtures.patch.module.thrift_metadata


class MyEnum(_fbthrift_python_types.Enum, int):
    MyValue0 = 0
    @staticmethod
    def __get_thrift_name__() -> str:
        return "module.MyEnum"

    @staticmethod
    def __get_thrift_uri__():
        return "test.dev/fixtures/patch/MyEnum"

    @staticmethod
    def __get_metadata__():
        return test.fixtures.patch.module.thrift_metadata.gen_metadata_enum_MyEnum()

    def _to_python(self):
        return self

    def _to_py3(self):
        import importlib
        py3_types = importlib.import_module("test.fixtures.patch.module.types")
        return py3_types.MyEnum(self.value)

    def _to_py_deprecated(self):
        return self.value


_fbthrift_all_enums = [
    MyEnum,
]

def _fbthrift_metadata__struct_MyData():
    return test.fixtures.patch.module.thrift_metadata.gen_metadata_struct_MyData()


def _fbthrift_metadata__struct_MyDataWithCustomDefault():
    return test.fixtures.patch.module.thrift_metadata.gen_metadata_struct_MyDataWithCustomDefault()


def _fbthrift_metadata__struct_InnerUnion():
    return test.fixtures.patch.module.thrift_metadata.gen_metadata_struct_InnerUnion()


def _fbthrift_metadata__struct_MyUnion():
    return test.fixtures.patch.module.thrift_metadata.gen_metadata_struct_MyUnion()


def _fbthrift_metadata__struct_MyStruct():
    return test.fixtures.patch.module.thrift_metadata.gen_metadata_struct_MyStruct()


def _fbthrift_metadata__struct_LateDefStruct():
    return test.fixtures.patch.module.thrift_metadata.gen_metadata_struct_LateDefStruct()


def _fbthrift_metadata__struct_Recursive():
    return test.fixtures.patch.module.thrift_metadata.gen_metadata_struct_Recursive()


def _fbthrift_metadata__struct_Bar():
    return test.fixtures.patch.module.thrift_metadata.gen_metadata_struct_Bar()


def _fbthrift_metadata__struct_Loop():
    return test.fixtures.patch.module.thrift_metadata.gen_metadata_struct_Loop()


def _fbthrift_metadata__struct_RefFields():
    return test.fixtures.patch.module.thrift_metadata.gen_metadata_struct_RefFields()


_fbthrift_all_structs = [
    MyData,
    MyDataWithCustomDefault,
    InnerUnion,
    MyUnion,
    MyStruct,
    LateDefStruct,
    Recursive,
    Bar,
    Loop,
    RefFields,
]
_fbthrift_python_types.fill_specs(*_fbthrift_all_structs)
